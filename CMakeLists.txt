cmake_minimum_required(VERSION 3.21)
project(WarpII)

set(CMAKE_CXX_STANDARD 17)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")

if(DEFINED CACHE{WARPII_DOC_BUILD})
    include("warpii-doc")
endif()
include("warpii-extension")

if (WARPII_ONLY_DOCS)
    return()
endif()

if(NOT DEFINED CMAKE_CXX_COMPILER_LAUNCHER)
    find_program(CCACHE_PROGRAM ccache)
    if(CCACHE_PROGRAM)
        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
    endif()
endif()

####
####  Set up dependencies
####
find_package(MPI REQUIRED)

if(DEFINED DEALII_INSTALL_DIR)
    list(INSERT CMAKE_PREFIX_PATH 0 ${DEALII_INSTALL_DIR})
endif()
find_package(deal.II $ENV{DEALII_VERSION} REQUIRED)
set(DEAL_II_WITH_MPI ON)
deal_ii_initialize_cached_variables()

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ TYPE INCLUDE)

####
####  Our own source tree and main executable
####
add_subdirectory(src)

add_executable(warpii main.cc)
target_link_libraries(warpii libwarpii)
target_link_libraries(warpii ${MPI_CXX_LIBRARIES})
deal_ii_setup_target(warpii)

enable_testing()
add_subdirectory(test)

add_subdirectory(extensions)

